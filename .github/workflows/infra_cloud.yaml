name: CD - Terraform Cloud Deploy

permissions:
  id-token: write        # OIDC 驗證必需
  contents: read

on:
  pull_request:
    types: [closed]      # 只在 PR 被關閉時觸發
    branches:
      - main             # 限定主分支
    paths:
      - 'terraform/cloud/**'  # 僅當這個路徑下有變更時才觸發
  workflow_dispatch:

jobs:
  deploy-cloud:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::533267110761:role/github-actions-oidc-role
          aws-region: ap-northeast-2
          
      - name: Checkout source repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: terraform/cloud
          fetch-depth: 1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      - name: Download existing tfstate from S3
        working-directory: terraform/cloud
        run: |
          echo "[INFO] Downloading latest tfstate from S3..."
          aws s3 cp s3://bbb-iot-artifact-registry/artifacts/terraform.tfstate terraform.tfstate || echo "[WARN] No remote state found, continuing..."

      - name: Terraform Init (Cloud)
        working-directory: terraform/cloud
        run: |
          echo "[INFO] Initialize Terraform..."
          terraform init -input=false

      - name: Terraform Plan (PaaS)
        working-directory: terraform/cloud
        run: |
          echo "[INFO] Terraform Plan"
          terraform plan -out=tfplan

      - name: Terraform Apply (PaaS)
        working-directory: terraform/cloud
        run: |
          echo "[INFO] Applying Terraform..."
          terraform apply -auto-approve tfplan

      - name: Cleanup
        working-directory: terraform/cloud
        run: |
          echo "[INFO] Cleaning temporary files..."
          rm -f tfplan
      - name: Upload tfstate to S3
        working-directory: terraform/cloud
        run: |
          echo "[INFO] Uploading tfstate to S3..."
          aws s3 cp terraform.tfstate s3://bbb-iot-artifact-registry/artifacts/
